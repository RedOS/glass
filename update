usrsF = io.open("red/glass/usrs", "w")
usrsF : write([[
local TGB
for _,side in pairs(redstone.getSides()) do
  if peripheral.getType(side)=="glassesbridge" or peripheral.getType(side)=="terminal_glasses_bridge" then
        TGB = peripheral.wrap(side)
		break
  end
end
if TGB==nil then
  print("Can't find Glasses Bridge!")
end
TGB.clear()
local border = TGB.addBox(5,3,200,2,gray,1)
local border = TGB.addBox(5,83,200,2,gray,1)
local border = TGB.addBox(3,3,2,82,gray,1)
local border = TGB.addBox(203,3,2,82,gray,1)
local object1 = TGB.addBox(5, 5, 198, 78, lightGray, 0.85)
local header = TGB.addText(9, 9, "Users", aqua)
header.setZIndex(1)
header.setScale(2)
local cmd1 = TGB.addText(9, 30, "Login - $$login", black)
local cmd2 = TGB.addText(9, 42, "Register - $$register", black)
cmd1.setZIndex(1)
cmd2.setZIndex(1)
while not usrs do
	local e, msg = os.pullEvent()
	if e == "chat_command" then
		if msg == "login" then
			shell.run("red/glass/login")
		elseif msg == "register" then
			shell.run("red/glass/register")
		else
			local error = TGB.addText(9, 55, "Command not found!", red)
			error.setZIndex(1)
		end
	end
end
]])
usrsF : close()
registerF = io.open("red/glass/register", "w")
registerF : write([[
local TGB
for _,side in pairs(redstone.getSides()) do
  if peripheral.getType(side)=="glassesbridge" or peripheral.getType(side)=="terminal_glasses_bridge" then
        TGB = peripheral.wrap(side)
		break
  end
end
if TGB==nil then
  print("Can't find Glasses Bridge!")
end
TGB.clear()
local border = TGB.addBox(5,3,200,2,gray,1)
local border = TGB.addBox(5,83,200,2,gray,1)
local border = TGB.addBox(3,3,2,82,gray,1)
local border = TGB.addBox(203,3,2,82,gray,1)
local object1 = TGB.addBox(5, 5, 198, 78, lightGray, 0.85)
local header = TGB.addText(9, 9, "Registration of your nickname", aqua)
header.setZIndex(1)
header.setScale(1.28)
local cmd1 = TGB.addText(9, 30, "$$password or $$back", black)
cmd1.setZIndex(1)
while not reg do
	local e, msg, nick = os.pullEvent()
	if e == "chat_command" then
		if fs.exists("red/glass/usr/"..nick) and msg ~= "back" then
			local cmd2 = TGB.addText(9, 38, "User already exists!", red)
			cmd2.setZIndex(1)
			os.sleep(1.45)
			shell.run("red/glass/register")
		elseif msg == "back" then
			shell.run("red/glass/usrs")
		else
			file = io.open("red/glass/usr/"..nick, "w")
			file : write(msg)
			file : close()
			os.sleep(0.2)
			local cmd2 = TGB.addText(9, 38, "Succesfully registered!", black)
			cmd2.setZIndex(1)
			os.sleep(1.45)
			shell.run("red/glass/usrs")
		end
	end
end
]])
registerF : close()
loginFile = io.open("red/glass/login", "w")
loginFile : write([[
local TGB
for _,side in pairs(redstone.getSides()) do
  if peripheral.getType(side)=="glassesbridge" or peripheral.getType(side)=="terminal_glasses_bridge" then
        TGB = peripheral.wrap(side)
		break
  end
end
if TGB==nil then
  print("Can't find Glasses Bridge!")
end
os.sleep(.001)
TGB.clear()
login = false
local border = TGB.addBox(5,3,200,2,gray,1)
local border = TGB.addBox(5,83,200,2,gray,1)
local border = TGB.addBox(3,3,2,82,gray,1)
local border = TGB.addBox(203,3,2,82,gray,1)
local object1 = TGB.addBox(5, 5, 198, 78, lightGray, 0.85)
local header = TGB.addText(9, 9, "Login", aqua)
local name = TGB.addText(9, 30, "", black)
local password = TGB.addText(9, 38, "Password - $$password", black)
local ret = TGB.addText(9, 65, "$$back for return", black)
name.setZIndex(1)
ret.setZIndex(1)
password.setZIndex(1)
header.setZIndex(1)
header.setScale(2)
while not login do
local e, msg, name = os.pullEvent()
if e == "chat_command" then
	if msg == "back" then
		shell.run("red/glass/usrs")
	else
		if fs.exists("red/glass/usr/"..name) then
			lpass = msg
			file = io.open("red/glass/usr/"..name)
			cpass = file : read()
			file : close()
			if cpass == lpass then
				login = true
				shell.run("red/glass/loggedin")
			else
				local message = TGB.addText(9, 48, "Wrong password!", red)
				os.sleep(1)
				shell.run("red/glass/login")
			end
		else
			local message = TGB.addText(9, 48, "User not found, please register", red)
			os.sleep(1)
			shell.run("red/glass/login")
		end
	end
end
end
]])
loginFile : close()
verFile = io.open("red/glass/usr/ver", "w")
verFile : write("1.0.1")
verFile : close()
startupFile = io.open("red/glass/startup", "w")
startupFile : write([[
local TGB
for _,side in pairs(redstone.getSides()) do
  if peripheral.getType(side)=="glassesbridge" or peripheral.getType(side)=="terminal_glasses_bridge" then
        TGB = peripheral.wrap(side)
		break
  end
end
if TGB==nil then
  print("Can't find Glasses Bridge!")
end
gray = 0x555555
lightGray = 0xAAAAAA
red = 0xFF5555
black = 0x000000
cyan = 0x00AAAA
aqua = 0x55FFFF
white = 0xFFFFFF
TGB.clear()
os.sleep(.4)
local logo1 = TGB.addBox(9, 9, 40, 40, red, 0.85)
os.sleep(.4)
local logo2 = TGB.addBox(49, 9, 40, 40, gray, 0.85)
os.sleep(.4)
local logo3 = TGB.addBox(89, 9, 40, 40, white, 0.85)
os.sleep(.4)
local logo4 = TGB.addBox(129, 9, 40, 40, lightGray, 0.85)
os.sleep(.4)
local logo5 = TGB.addBox(169, 9, 40, 40, cyan, 0.85)
os.sleep(.7)
TGB.clear()
local object1 = TGB.addBox(5, 5, 198, 78, lightGray, 0.65)
local border = TGB.addBox(5,3,200,2,gray,1)
local border = TGB.addBox(5,83,200,2,gray,1)
local border = TGB.addBox(3,3,2,82,gray,1)
local border = TGB.addBox(203,3,2,82,gray,1)
local subheader = TGB.addText(9, 42, "Glasses version", aqua)
local header = TGB.addText(9, 9, "Red OS", gray)
local version = TGB.addText(9, 57, "Version 1.0.1", aqua)
local poweredBy = TGB.addText(152, 77, "Powered by Red", aqua)
header.setScale(4)
header.setZIndex(1)
subheader.setScale(1.35)
subheader.setZIndex(1)
version.setScale(0.95)
version.setZIndex(1)
poweredBy.setScale(0.55)
poweredBy.setZIndex(1)
os.sleep(3)
shell.run("red/glass/login")
]])
startupFile : close()
shell.run("red/glass/startup")